terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 4.0"
    }
  }
}

# Configure the AWS Provider
provider "aws" {
  region = "ap-south-1"
}

resource "aws_vpc" "testvpc" {
  cidr_block       = "10.0.0.0/16"
  instance_tenancy = "default"

  tags = {
    Name = "terraform_vpc"
  }
}

resource "aws_subnet" "pubsub" {
  vpc_id     = aws_vpc.testvpc.id
  cidr_block = "10.0.1.0/24"

  tags = {
    Name = "public_subnet"
  }
}
resource "aws_subnet" "privsub" {
  vpc_id     = aws_vpc.testvpc.id
  cidr_block = "10.0.2.0/24"

  tags = {
    Name = "private_subnet"
  }
}

resource "aws_route_table" "pubrt" {
  vpc_id = aws_vpc.testvpc.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.tigw.id
  }

  tags = {
    Name = "public_rt"
  }
}

resource "aws_route_table" "privrt" {
  vpc_id = aws_vpc.testvpc.id

  route {
    cidr_block = "10.0.1.0/24"
    gateway_id = aws_nat_gateway.tnat.id
  }

  tags = {
    Name = "private_rt"
  }
}
resource "aws_internet_gateway" "tigw" {
  vpc_id = aws_vpc.testvpc.id

  tags = {
    Name = "tigw"
  }
}

resource "aws_nat_gateway" "tnat" {
  allocation_id = aws_eip.teip.id
  subnet_id     = aws_subnet.pubsub.id

  tags = {
    Name = "tnat"
  }
}

resource "aws_route_table_association" "publicassociation" {
  subnet_id      = aws_subnet.pubsub.id
  route_table_id = aws_route_table.pubrt.id
}

resource "aws_eip" "teip" {
  vpc      = true
}

resource "aws_security_group" "allow_all" {
  name        = "allow_tls"
  description = "Allow TLS inbound traffic"
  vpc_id      = aws_vpc.testvpc.id

  ingress {
    description      = "TLS from VPC"
    from_port        = 0
    to_port          = 65535
    protocol         = "tcp"
    cidr_blocks      = ["0.0.0.0/0"]
  }

  egress {
    from_port        = 0
    to_port          = 0
    protocol         = "-1"
    cidr_blocks      = ["0.0.0.0/0"]
  }

  tags = {
    Name = "allow_all"
  }
}

resource "aws_instance" "public_machine" {
  ami           = "ami-0376ec8eacdf70aae"
availability_zone ="ap-south-1"
  instance_type = "t2.micro"
key_name= "keypairec2"
subnet_id = aws_subnet.pubsub.id
vpc_security_group_ids = [aws_security_group.allow_all.id]
  tags = {
    Name = "public ec2"
  }
}

resource "aws_instance" "priv" {
  ami           = "ami-0376ec8eacdf70aae"
availability_zone ="ap-south-1b"
  instance_type = "t2.micro"
key_name = "keypairec2"
subnet_id = aws_subnet.privsub.id
vpc_security_group_ids = [aws_security_group.allow_all.id]
  tags = {
    Name = "private ec2"
  }
}
